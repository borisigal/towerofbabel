# .env.local.example
# Environment Variable Template for TowerOfBabel
# Copy this file to .env.local and fill in the actual values

# ============================================
# SUPABASE (Stories 1.3, 1.4, 1.5A)
# ============================================
# DASHBOARD REQUIREMENTS:
# - NEXT_PUBLIC_SUPABASE_URL: Used for authentication (get user identity)
# - NEXT_PUBLIC_SUPABASE_ANON_KEY: Used for authentication (get user identity)
# - DATABASE_URL: Used for authorization (get user tier/usage from database)
#
# CRITICAL: Dashboard queries DATABASE for tier/usage, NOT JWT.
# This ensures paid users get immediate access after upgrade.
# See: /lib/auth/README.md for database-as-source-of-truth pattern

# Supabase project URL (find in Supabase dashboard > Settings > API)
NEXT_PUBLIC_SUPABASE_URL=https://[project].supabase.co

# Supabase anonymous key (public, safe to expose in client-side code)
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJ...

# Database connection string with Supabase Session Mode Pooler
# Port 5432: Session Mode pooler - supports prepared statements (required for Prisma)
# Port 6543: Transaction Mode pooler - does NOT support prepared statements (causes errors)
# CRITICAL: sslmode=require is REQUIRED for Supabase connections
# Password should be URL-encoded (! → %21, + → %2B, % → %25, $ → %24, ? → %3F)
DATABASE_URL=postgresql://postgres:[password]@aws-1-us-east-1.pooler.supabase.com:5432/postgres?sslmode=require

# Direct database connection for migrations (bypasses PgBouncer pooling)
# Migrations require direct connection to database, not pooled connection
# CRITICAL: sslmode=require is REQUIRED for Supabase connections
# Password should be URL-encoded (! → %21, + → %2B, % → %25, $ → %24, ? → %3F)
DIRECT_URL=postgresql://postgres:[password]@db.[project].supabase.co:5432/postgres?sslmode=require

# ============================================
# LLM PROVIDER (Epic 2 - Week 1 benchmarking determines provider)
# ============================================
# Selected provider: openai | anthropic | xai | google
# Set this after benchmarking in Story 2.4
LLM_PROVIDER=openai

# Provider API keys (use only the selected provider's key)
OPENAI_API_KEY=sk-...
# ANTHROPIC_API_KEY=sk-ant-...
# XAI_API_KEY=xai-...
# GOOGLE_AI_API_KEY=AI...

# ============================================
# LEMON SQUEEZY (Epic 3 - Payment Integration)
# ============================================
# Lemon Squeezy API key (server-side only, never expose publicly)
# Find in Lemon Squeezy dashboard > Settings > API
LEMONSQUEEZY_API_KEY=...

# Lemon Squeezy webhook secret for verifying webhook signatures
# Generate in Lemon Squeezy dashboard > Settings > Webhooks
LEMONSQUEEZY_WEBHOOK_SECRET=...

# Lemon Squeezy store ID (safe to expose in client-side code)
NEXT_PUBLIC_LEMONSQUEEZY_STORE_ID=...

# ============================================
# VERCEL KV / REDIS (Story 1.5B - REQUIRED for cost circuit breaker)
# ============================================
# Vercel KV credentials (create in Vercel dashboard > Storage > KV)
# Used for rate limiting and LLM cost tracking
KV_REST_API_URL=https://[name]-[project].kv.vercel-storage.com
KV_REST_API_TOKEN=...

# ============================================
# MONITORING (Story 1.5B)
# ============================================
# Sentry DSN for error tracking and performance monitoring
SENTRY_DSN=https://[key]@[org].ingest.sentry.io/[project]

# ============================================
# COST LIMITS (Story 1.5C - LLM cost protection)
# ============================================
# Daily cost limit for all users combined (USD)
# Default: $50/day prevents runaway costs
COST_LIMIT_DAILY=50

# Hourly cost limit for all users combined (USD)
# Default: $5/hour catches sudden spikes
COST_LIMIT_HOURLY=5

# Per-user daily cost limit (USD)
# Default: $1/user/day prevents individual abuse
COST_LIMIT_USER_DAILY=1

# ============================================
# PRO TIER CONFIGURATION (Epic 2)
# ============================================
# Message limit for Pro tier users (monthly)
# TBD based on LLM cost benchmarking in Story 2.4
PRO_MESSAGE_LIMIT=100

# ============================================
# NEXT.JS CONFIGURATION
# ============================================
# Node environment (development | production | test)
NODE_ENV=development

# ============================================
# NOTES
# ============================================
# - Never commit .env.local to version control (it's in .gitignore)
# - Rotate all keys/secrets before production deployment
# - Use test/development keys during development
# - Lemon Squeezy provides test mode for development/testing
# - Enable production mode in Lemon Squeezy dashboard for live payments
