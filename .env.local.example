# .env.local.example
# Environment Variable Template for TowerOfBabel
# Copy this file to .env.local and fill in the actual values

# ============================================
# SUPABASE (Stories 1.3, 1.4, 1.5A)
# ============================================
# DASHBOARD REQUIREMENTS:
# - NEXT_PUBLIC_SUPABASE_URL: Used for authentication (get user identity)
# - NEXT_PUBLIC_SUPABASE_ANON_KEY: Used for authentication (get user identity)
# - DATABASE_URL: Used for authorization (get user tier/usage from database)
#
# CRITICAL: Dashboard queries DATABASE for tier/usage, NOT JWT.
# This ensures paid users get immediate access after upgrade.
# See: /lib/auth/README.md for database-as-source-of-truth pattern

# Supabase project URL (find in Supabase dashboard > Settings > API)
NEXT_PUBLIC_SUPABASE_URL=https://[project].supabase.co

# Supabase anonymous key (public, safe to expose in client-side code)
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJ...

# Database connection string with Supabase Session Mode Pooler
# Port 5432: Session Mode pooler - supports prepared statements (required for Prisma)
# Port 6543: Transaction Mode pooler - does NOT support prepared statements (causes errors)
# CRITICAL: sslmode=require is REQUIRED for Supabase connections
# Password should be URL-encoded (! → %21, + → %2B, % → %25, $ → %24, ? → %3F)
DATABASE_URL=postgresql://postgres:[password]@aws-1-us-east-1.pooler.supabase.com:5432/postgres?sslmode=require

# Direct database connection for migrations (bypasses PgBouncer pooling)
# Migrations require direct connection to database, not pooled connection
# CRITICAL: sslmode=require is REQUIRED for Supabase connections
# Password should be URL-encoded (! → %21, + → %2B, % → %25, $ → %24, ? → %3F)
DIRECT_URL=postgresql://postgres:[password]@db.[project].supabase.co:5432/postgres?sslmode=require

# ============================================
# LLM PROVIDER (Story 2.2 - Anthropic Claude Sonnet 4.5 selected)
# ============================================
# Selected provider: anthropic
# Decision made in Story 2.2 based on cost ($0.012), privacy (zero retention), quality
LLM_PROVIDER=anthropic

# Anthropic API key (server-side only, never expose publicly)
# Create at: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your_api_key_here

# Claude model to use for interpretations
LLM_MODEL=claude-sonnet-4-5-20250929

# LLM request timeout in milliseconds (30 seconds)
LLM_TIMEOUT_MS=30000

# Alternative providers (not currently used)
# OPENAI_API_KEY=sk-...
# XAI_API_KEY=xai-...
# GOOGLE_AI_API_KEY=AI...

# ============================================
# LEMON SQUEEZY (Epic 3 - Payment Integration)
# ============================================
# Lemon Squeezy API key (server-side only, never expose publicly)
# Find in Lemon Squeezy dashboard > Settings > API
LEMONSQUEEZY_API_KEY=...

# Lemon Squeezy webhook secret for verifying webhook signatures
# Generate in Lemon Squeezy dashboard > Settings > Webhooks
LEMONSQUEEZY_WEBHOOK_SECRET=...

# Lemon Squeezy store ID (safe to expose in client-side code)
NEXT_PUBLIC_LEMONSQUEEZY_STORE_ID=...

# ============================================
# VERCEL KV / REDIS (Story 1.5B - REQUIRED for cost circuit breaker)
# ============================================
# Vercel KV credentials (create in Vercel dashboard > Storage > KV)
# Used for rate limiting and LLM cost tracking
KV_REST_API_URL=https://[name]-[project].kv.vercel-storage.com
KV_REST_API_TOKEN=...

# ============================================
# MONITORING (Story 1.5B)
# ============================================
# Sentry DSN for server-side error tracking and performance monitoring
# (API routes, Server Components, Server Actions)
SENTRY_DSN=https://[key]@[org].ingest.sentry.io/[project]

# Sentry DSN for client-side (browser) error tracking
# (Client Components, browser errors)
# CRITICAL: Use same value as SENTRY_DSN (NEXT_PUBLIC_ prefix makes it available in browser)
# Sentry DSN is safe to expose (public DSN, Sentry validates events server-side)
NEXT_PUBLIC_SENTRY_DSN=https://[key]@[org].ingest.sentry.io/[project]

# Optional: Enable Sentry in local development (default: disabled)
# Uncomment to send errors to Sentry during local development
# SENTRY_ENABLE_DEV=true

# ============================================
# RATE LIMITING (Story 2.3 - API protection)
# ============================================
# Rate limit per IP address per hour
# Default: 50 requests/hour prevents abuse
# Applied to /api/interpret endpoint and other API routes
RATE_LIMIT_PER_HOUR=50

# ============================================
# COST LIMITS (Story 1.5C - LLM cost protection)
# ============================================
# Daily cost limit for all users combined (USD)
# Default: $50/day prevents runaway costs
COST_LIMIT_DAILY=50

# Hourly cost limit for all users combined (USD)
# Default: $5/hour catches sudden spikes
COST_LIMIT_HOURLY=5

# Per-user daily cost limit (USD)
# Default: $1/user/day prevents individual abuse
COST_LIMIT_USER_DAILY=1

# ============================================
# CRON JOBS (Story 3.1 - Background tasks)
# ============================================
# Vercel Cron secret for authenticating cron job requests
# This secret is automatically added by Vercel to the Authorization header
# Generate a strong random secret (e.g., openssl rand -base64 32)
# Used by: /api/cron/reset-usage (daily Pro user usage reset)
CRON_SECRET=your_random_secret_here_replace_in_production

# ============================================
# USAGE LIMITS (Story 2.3, 3.1 - Tier configuration)
# ============================================
# Trial tier: Total message limit (lifetime)
# Default: 10 messages for trial users
TRIAL_MESSAGE_LIMIT=10

# Trial tier: Time limit in days
# Default: 14 days from account creation
# Trial expires when EITHER message limit OR time limit is reached
TRIAL_DAYS_LIMIT=14

# Pro tier: Monthly message limit (server-side, used for enforcement)
# Default: 100 messages per month
# Reset occurs monthly on billing cycle
PRO_MESSAGE_LIMIT=100

# Pro tier: Monthly message limit (client-side, used for display in upgrade modal - Story 3.3)
# Should match PRO_MESSAGE_LIMIT value
# Shows as placeholder "[X]" in pricing modal if not set (TBD until Week 1 benchmarking)
NEXT_PUBLIC_PRO_MESSAGE_LIMIT=100

# ============================================
# NEXT.JS CONFIGURATION
# ============================================
# Node environment (development | production | test)
NODE_ENV=development

# ============================================
# NOTES
# ============================================
# - Never commit .env.local to version control (it's in .gitignore)
# - Rotate all keys/secrets before production deployment
# - Use test/development keys during development
# - Lemon Squeezy provides test mode for development/testing
# - Enable production mode in Lemon Squeezy dashboard for live payments
